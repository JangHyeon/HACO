<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 구현하고자하는 인터페이스 풀경로 -->
 <!-- EmployeeDAO를 구현하는 Mapper -->
<mapper namespace="kr.co.haco.DAO.EmployeeDAO"> 	
	<!-- 직원 등록 -->
	<select id="getAccountId" resultType="Integer">
		<!-- 마지막으로 입력된 ID -->
		select LAST_INSERT_ID();
	</select>
	<insert id="addAccount">	 	
		INSERT INTO account (state_code,password) VALUES(1,'1004')	
	</insert>	
	<update id="setUserId">
		update account SET id= #{account_id} WHERE account_id=#{account_id}
	</update>
	<insert id="setAuthority" parameterType="kr.co.haco.VO.Authority">
		insert into authority values(#{account_id},#{role_name});
	</insert>
	<insert id="addEmployee">
		INSERT INTO employee 
		(account_id,job_code,name_kor,name_eng,gender,address_registered,address_real,
			phone_cell,email,join_date,now_center_id,join_center_id,resident_registration_num1,resident_registration_num2,photo)
		VALUES(#{account_id},#{job_code},#{name_kor},#{name_eng},#{gender},#{address_registered},#{address_real},
			#{phone_cell},#{email},#{join_date},#{now_center_id},#{join_center_id},#{resident_registration_num1},#{resident_registration_num2},#{photo})			
	</insert>
	
	<!-- 직원 목록 총 수 --> 
	<select id="getEmployeeCount" resultType="Integer" parameterType="java.util.Map">
		SELECT count(*)
		FROM employee e
			 INNER JOIN education_center ec
			 ON e.now_center_id = ec.center_id
			 INNER JOIN education_center ec2
			 ON e.join_center_id = ec2.center_id
		WHERE e.job_code= #{job_code}
		<if test="now_center_id != 0">
			AND e.now_center_id = #{now_center_id}
		</if>
	</select>	
	<!-- 직원 목록 조회 -->
	<select id="getEmpList" resultType="kr.co.haco.VO.EmployeeList" parameterType="java.util.Map">
		SELECT e.now_center_id, ec.location AS now_center_name, e.account_id, e.name_kor,e.phone_cell,e.email,e.join_date, 
				e.join_center_id ,ec2.location AS join_center_name
		FROM employee e
			 INNER JOIN education_center ec
			 ON e.now_center_id = ec.center_id
			 INNER JOIN education_center ec2
			 ON e.join_center_id = ec2.center_id
		WHERE e.job_code= #{job_code}
		<if test="now_center_id != 0">
			AND e.now_center_id = #{now_center_id}
	    </if>		
	     limit #{startNum},#{pageSize}
	</select>
	<!-- 센터 목록조회 -->
	<select id="getEduCenterList" resultType="kr.co.haco.VO.EducationCenter">
		select center_id, location FROM education_center order by center_id				
	</select>
	
	<!-- 직원 상세정보 조회 -->
	<select id="getUserId" resultType="String">
		select id from account where account_id=#{account_id}
	</select>
	<select id="getEmp" resultType="kr.co.haco.VO.Employee">
		SELECT *
		FROM employee
		where account_id = #{account_id}
	</select>
	
	<!-- 직원 상세정보 수정 -->	
	<update id="setUserIdWithId">
		update account SET id= '${param2}' WHERE account_id=${param1}
	</update>
	<update id="updateEmp" parameterType="kr.co.haco.VO.Employee">
		UPDATE employee SET address_registered=#{address_registered},address_real=#{address_real},phone_home=#{phone_home},
			phone_cell=#{phone_cell},email=#{email},bank=#{bank},bank_account=#{bank_account},account_owner=#{account_owner},
			photo=#{photo}			
		WHERE account_id=#{account_id}
	</update>
</mapper>
