<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 구현하고자하는 인터페이스 풀경로 -->
<mapper namespace="kr.co.haco.DAO.AttendanceDAO">
	<select id="getattenlist" parameterType="hashmap" resultType="kr.co.haco.VO.AttendanceOpenCourse">
		select d.location, a.course_name, b.classroom, a.course_start_date, a.course_end_date, 
			c.name_kor ,a.open_course_id , d.center_id
			from open_course a , center_classroom b, employee c , education_center d
			where a.center_id = b.center_id
			and a.account_id = c.account_id
			and a.center_id = d.center_id
			and a.center_classroom_id = b.center_classroom_id
			<if test="center_id != 1">
				and d.center_id = #{center_id}
			</if>
			and STR_TO_DATE(#{seldate},'%Y-%m-%d') BETWEEN course_start_date and course_end_date
	</select>
	<select id="getstudentlist" parameterType="hashmap" resultType="kr.co.haco.VO.AttendanceMember">
		select b.name, b.phone, b.account_id , a.lecture_register_id ,c.center_id , COALESCE(g.attendance_code,'1') as attendance_code
			from       lecture_register a
            inner join member           b   on a.account_id = b.account_id
            inner join open_course      c   on a.open_course_id = c.open_course_id
            inner join subject          d   on c.subject_id = d.subject_id
            inner join education_center e   on c.center_id = e.center_id
            inner join center_classroom f   on c.center_classroom_id = f.center_classroom_id
            left  join attendance       g   on g.lecture_register_id = a.lecture_register_id and g.attendance_date = #{attendance_date}
			where a.open_course_id = #{open_course_id}
			and   a.lecture_register_code = '4'
	</select>
	<insert id="insertatt" parameterType="java.util.Map">
		insert into attendance (lecture_register_id, attendance_code,attendance_date, center_id, open_course_id)
			values 
				(#{lecture_register_id},#{attendance_code},#{attendance_date},#{center_id},#{open_course_id})
				on DUPLICATE KEY UPDATE lecture_register_id = #{lecture_register_id} , attendance_code=#{attendance_code}, 
				attendance_date=#{attendance_date},center_id=#{center_id},open_course_id=#{open_course_id}
				<!-- <foreach collection="list" item="item" separator=",">
				(#{item.lecture_register_id},#{item.attendance_code},#{item.attendance_date},#{item.center_id},#{item.open_course_id})
				on DUPLICATE KEY UPDATE 
				lecture_register_id = #{item.lecture_register_id} , attendance_code=#{item.attendance_code}, 
				attendance_date=#{item.attendance_date},center_id=#{item.center_id},open_course_id=#{item.open_course_id}
				
				 </foreach> -->
	</insert>
</mapper>